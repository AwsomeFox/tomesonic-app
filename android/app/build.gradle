plugins {
  id 'com.android.application'
  id 'kotlin-android'
  id 'kotlin-kapt'
}

kotlin {
  kotlinDaemonJvmArgs = [
    "-Dfile.encoding=UTF-8",
    "--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED",
    "--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED",
    "--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED",
    "--add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED",
    "--add-opens=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED",
    "--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED",
    "--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED",
    "--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED",
    "--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED",
    "--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED"
  ]

  jvmToolchain(17)
}

android {
  namespace = 'com.tomesonic.app'
  buildFeatures {
    viewBinding = true
    buildConfig = true
  }
  kotlinOptions {
    freeCompilerArgs = ['-Xjvm-default=all']
  }
  compileSdk = rootProject.ext.compileSdkVersion

  signingConfigs {
    release {
      if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
        storeFile file(MYAPP_UPLOAD_STORE_FILE)
        storePassword MYAPP_UPLOAD_STORE_PASSWORD
        keyAlias MYAPP_UPLOAD_KEY_ALIAS
        keyPassword MYAPP_UPLOAD_KEY_PASSWORD
      }
    }
  }
  defaultConfig {
    applicationId "com.tomesonic.app"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 115
    versionName "0.12.1-beta"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    manifestPlaceholders = [
      "appAuthRedirectScheme": "com.tomesonic.app"
    ]
    aaptOptions {
      // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
      // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
      ignoreAssetsPattern = '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
    }
  }
  buildTypes {
    debug {
      versionNameSuffix "-debug"
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    release {
      signingConfig signingConfigs.release
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  lint {
    abortOnError = false
    checkReleaseBuilds = false
  }
}

repositories {
  flatDir {
    dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
  }
  mavenCentral()
}

configurations.configureEach {
  resolutionStrategy {
    force("com.google.android.gms:play-services-base:18.0.1")
    force("androidx.appcompat:appcompat:$androidxAppCompatVersion")
    force("androidx.core:core-ktx:$androidx_core_ktx_version")
    force("androidx.media:media:$androidx_media_version")
    force("org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version")
    force("org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version")
  }
}

dependencies {
  implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
  implementation "com.google.android.material:material:1.12.0"
  implementation project(':capacitor-android')

  implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
  implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"

  implementation project(':capacitor-cordova-android-plugins')

  implementation "androidx.core:core-ktx:$androidx_core_ktx_version"

  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

  implementation "androidx.media:media:$androidx_media_version"

  // Media3 - migrated from ExoPlayer2
  if (findProject(':media3-exoplayer') != null) {
    implementation project(':media3-exoplayer')
    implementation project(':media3-ui')
    implementation project(':media3-session')
    implementation project(':media3-cast')
    implementation project(':media3-exoplayer-hls')
  } else {
    implementation "androidx.media3:media3-exoplayer:$media3_version"
    implementation "androidx.media3:media3-ui:$media3_version"
    implementation "androidx.media3:media3-session:$media3_version"
    implementation "androidx.media3:media3-cast:$media3_version"
    implementation "androidx.media3:media3-exoplayer-hls:$media3_version"
  }

  // Google Cast Framework
  implementation "com.google.android.gms:play-services-cast-framework:21.5.0"

  // Glide for images
  implementation "com.github.bumptech.glide:glide:$glide_version"

  // Paper NoSQL Db
  implementation 'io.github.pilgr:paperdb:2.7.2'

  // Simple Storage
  implementation "com.anggrayudi:storage:1.5.6"

  // OK HTTP
  implementation 'com.squareup.okhttp3:okhttp:4.9.2'

  // Jackson for JSON
  implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.12.2'
}

dependencies {
  // Test dependencies
  testImplementation 'junit:junit:4.13.2'
  androidTestImplementation 'androidx.test.ext:junit:1.1.5'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

apply from: 'capacitor.build.gradle'
