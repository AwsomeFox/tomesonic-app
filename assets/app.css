@import './tailwind.css';
@import './fonts.css';
@import './material3-theme.css';
@import './defaultStyles.css';
@import './absicons.css';
@import './transitions.css';

/* Ensure Material 3 variables are loaded first */
:root {
  /* Fallback colors in case Material 3 theme doesn't load */
  --md-sys-color-surface: 254, 251, 255;
  --md-sys-color-on-surface: 28, 27, 31;
  --md-sys-color-surface-container: 243, 237, 247;
  --md-sys-color-primary: 103, 80, 164;
  --md-sys-color-on-primary: 255, 255, 255;
}

* {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
}

input,
textarea {
  -webkit-touch-callout: auto;
  -webkit-user-select: auto;
  user-select: auto;
}

/* Ensure body has proper Material 3 styling and full height */
html, body {
  background-color: rgb(var(--md-sys-color-surface));
  color: rgb(var(--md-sys-color-on-surface));
  font-family: 'Roboto', 'system-ui', '-apple-system', 'sans-serif';
  margin: 0;
  padding: 0;
  height: 100vh !important;
  overflow: hidden !important;
}

body {
  /* @apply bg-transparent-safe text-on-surface; */
  background-color: rgb(var(--md-sys-color-surface));
  color: rgb(var(--md-sys-color-on-surface));
  height: 100vh !important;
  overflow: hidden !important;
}

.layout-wrapper {
  background: transparent;
  height: calc(100vh - env(safe-area-inset-top));
  min-height: calc(100vh - env(safe-area-inset-top));
  max-height: calc(100vh - env(safe-area-inset-top));
  /* Prevent the entire layout from scrolling */
  overflow: hidden;
  /* Use flexbox to properly contain content */
  display: flex;
  flex-direction: column;
}

/* When player is open but no bottom navigation, allow full viewport height including behind system nav */
.layout-wrapper.full-height {
  height: 100vh !important;
  min-height: 100vh !important;
  max-height: 100vh !important;
  /* Ensure proper flexbox layout */
  display: flex !important;
  flex-direction: column !important;
  overflow: hidden !important;
  /* Ensure no bottom margin/padding interferes with mini player positioning */
  margin-bottom: 0 !important;
  padding-bottom: 0 !important;
}

#content {
  background-color: rgb(var(--md-sys-color-surface));
  color: rgb(var(--md-sys-color-on-surface));
  /* Subtract only the status bar / top safe inset so views can extend under
     the bottom navigation bar when present. */
  height: calc(100% - var(--safe-area-inset-top, env(safe-area-inset-top, 0px)));
  min-height: calc(100% - var(--safe-area-inset-top, env(safe-area-inset-top, 0px)));
  max-height: calc(100% - var(--safe-area-inset-top, env(safe-area-inset-top, 0px)));
}

/* Override base content height when layout is full height */
.layout-wrapper.full-height #content {
  height: auto;
  min-height: auto;
  max-height: none;
}

#content.playerOpen {
  /* Same: only account for status bar */
  height: calc(100% - var(--safe-area-inset-top, env(safe-area-inset-top, 0px)));
  min-height: calc(100% - var(--safe-area-inset-top, env(safe-area-inset-top, 0px)));
  max-height: calc(100% - var(--safe-area-inset-top, env(safe-area-inset-top, 0px)));
}

/* Override playerOpen height when layout is full height */
.layout-wrapper.full-height #content.playerOpen {
  height: auto;
  min-height: auto;
  max-height: none;
}

/* When player is open but no bottom navigation, allow content to fill available space */
.layout-wrapper.full-height #content.playerOpen:not(.has-bottom-nav) {
  /* With full height layout, content should fill remaining space after app bar */
  flex: 1;
  /* Ensure content scrolls within its container, not the entire page */
  overflow-y: auto;
  overflow-x: hidden;
  /* Ensure no bottom margin/padding interferes with mini player */
  margin-bottom: 0 !important;
  padding-bottom: 0 !important;
}

/* Additional class for scrollable content */
.content-scrollable {
  overflow-y: auto !important;
  overflow-x: hidden !important;
}

/* When player is open but no bottom navigation, padding is now handled dynamically in default.vue */

/* Special class for bookshelf pages with bottom navigation - still only
   account for status bar offset so views render beneath the bottom nav. */
#content.has-bottom-nav {
  height: calc(100% - var(--bottom-nav-height, 56px));
}

#content.has-bottom-nav.playerOpen {
  height: calc(100% - var(--safe-area-inset-top, env(safe-area-inset-top, 0px)));
  min-height: calc(100% - var(--safe-area-inset-top, env(safe-area-inset-top, 0px)));
  max-height: calc(100% - var(--safe-area-inset-top, env(safe-area-inset-top, 0px)));
}

/* Override has-bottom-nav height when layout is full height (shouldn't happen but just in case) */
.layout-wrapper.full-height #content.has-bottom-nav,
.layout-wrapper.full-height #content.has-bottom-nav.playerOpen {
  height: auto;
  min-height: auto;
  max-height: none;
}

#bookshelf {
  /* Fill the parent content area; parent now only subtracts top safe inset */
  height: 100%;
  min-height: 100%;
}

/* Update shadows to use Material 3 elevation system */
.box-shadow-sm {
  box-shadow: var(--md-sys-elevation-level1);
}

.box-shadow-md {
  box-shadow: var(--md-sys-elevation-level3);
}

/* Material 3 State Layers */
.state-layer {
  position: relative;
  overflow: hidden;
}

.state-layer::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: transparent;
  transition: background-color var(--md-sys-motion-duration-short2) var(--md-sys-motion-easing-standard);
  pointer-events: none;
}

.state-layer:hover::before {
  background-color: rgba(var(--md-sys-color-on-surface), var(--md-sys-state-hover-opacity));
}

.state-layer:focus::before {
  background-color: rgba(var(--md-sys-color-on-surface), var(--md-sys-state-focus-opacity));
}

.state-layer:active::before {
  background-color: rgba(var(--md-sys-color-on-surface), var(--md-sys-state-pressed-opacity));
}

/* Material 3 shadow system */
.shadow-bottom {
  box-shadow: var(--md-sys-elevation-level2);
}

.shadow-top {
  box-shadow: var(--md-sys-elevation-level2);
}

.shadow-side {
  box-shadow: var(--md-sys-elevation-level3);
}

.shadow-sleepTimer {
  box-shadow: var(--md-sys-elevation-level1);
}

.shadow-height {
  height: calc(100% - 4px);
}

.bookshelfRow {
  background: rgb(var(--md-sys-color-surface-dim));
}

.bookshelfDivider {
  background: rgb(var(--md-sys-color-surface-container));
  box-shadow: var(--md-sys-elevation-level2);
}

.altBookshelfDivider {
  background: rgb(var(--md-sys-color-surface-container-high));
  box-shadow: var(--md-sys-elevation-level2);
}

/*
Bookshelf Label
*/
.categoryPlacard {
  letter-spacing: 1px;
}

.shinyBlack {
  background-color: #2d3436;
  background-image: linear-gradient(315deg, #19191a 0%, rgb(15, 15, 15) 74%);
  border-color: rgba(255, 244, 182, 0.6);
  border-style: solid;
  color: #fce3a6;
}

.altBookshelfLabel {
  background-color: #2d3436;
  background-image: linear-gradient(315deg, #19191a 0%, rgb(15, 15, 15) 74%);
  border-color: rgb(255, 255, 255);
  border-style: solid;
  color: #ffffff;
}

.cover-bg {
  width: calc(100% + 40px);
  height: calc(100% + 40px);
  top: -20px;
  left: -20px;
  background-size: 100% 100%;
  background-position: center;
  opacity: 1;
  filter: blur(20px);
}

.episode-subtitle {
  word-break: break-word;
  overflow: hidden;
  line-height: 16px;
  /* fallback */

  max-height: 32px;
  /* fallback */
  display: -webkit-box;
  -webkit-line-clamp: 2; /* number of lines to show */
  line-clamp: 2;
  -webkit-box-orient: vertical;
  box-shadow: 0px -1px 4px rgba(62, 50, 2, 0.5);
}

.line-clamp-2 {
  overflow: hidden;
  display: -webkit-box;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  line-clamp: 2;
}

.line-clamp-4 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 4;
  line-clamp: 4;
}

/* NUCLEAR OPTION: Force everything to take full height */
html, body, #__nuxt, #__layout {
  height: 100vh !important;
  min-height: 100vh !important;
  max-height: 100vh !important;
  overflow: hidden !important;
}

/* ABSOLUTE NUCLEAR FORCE: Override everything for full screen content */
.layout-wrapper.full-height #content:not(.has-bottom-nav),
.layout-wrapper.full-height #content.playerOpen:not(.has-bottom-nav),
.layout-wrapper.full-height #content.playerOpen:not(.has-bottom-nav).content-scrollable,
.layout-wrapper.full-height div#content:not(.has-bottom-nav),
.layout-wrapper.full-height div#content.playerOpen:not(.has-bottom-nav),
.layout-wrapper.full-height div#content.playerOpen:not(.has-bottom-nav).content-scrollable {
  flex: 1 !important;
  height: auto !important;
  min-height: auto !important;
  max-height: none !important;
  overflow-y: auto !important;
  overflow-x: hidden !important;
}

/* Ensure app bar doesn't shrink in full height layout */
.layout-wrapper.full-height .app-appbar,
.layout-wrapper.full-height [class*="app-appbar"] {
  flex-shrink: 0 !important;
}

/* Ensure mini player stays above full-height content */
.layout-wrapper.full-height #streamContainer,
.layout-wrapper.full-height #streamContainer[id="streamContainer"],
.layout-wrapper.full-height div#streamContainer,
.layout-wrapper.full-height div#streamContainer[id="streamContainer"] {
  z-index: 100 !important;
  /* Let Vue component handle position and transitions */
}


